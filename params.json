{"tagline":"Pythonic implementation of the R package apsrtable","body":"============\r\npy_apsrtable\r\n============\r\n\r\nOverview\r\n--------\r\n\r\npy_apsrtable aims to be the python implemenation of the R package apsrtable\r\n(http://cran.r-project.org/web/packages/apsrtable/index.html).\r\n\r\npy_asprtable takes as its input a model, or set of models, generated by the python packages statsmodels\r\n(http://statsmodels.sourceforge.net/) and pandas (http://pandas.pydata.org/), and\r\noutputs a LaTeX table formatted in a manner consistent with common political science\r\nformatting. The formatting is also nice for other applications. \r\n\r\nOptions for the models includes standard errors, two-tailed p values, and one-tailed p values. The variable and model names can be changed, and the stars (*) can be placed next to the values in parentheses if the p value is less than or equal to .05. \r\n\r\nFuture\r\n------\r\n\r\nCurrently the \"magic\" stars are only added for p values lower than .05. Eventually I would like to add an option to change the level at which the stars appear.\r\nMaybe even have an option for having a different number of stars at different levels of p. None of these are particularly pressing for me. \r\n\r\nInstallation\r\n------------\r\n\r\n    pip install py_apsrtable\r\n\r\n\r\nExample\r\n-------\r\n\r\nUsage for a single model:\r\n    \r\n    #Imports\r\n    import py_apsrtable\r\n    import scikits.statsmodels.api as sm\r\n    import pandas as pd\r\n\r\n    #Generate some data to use\r\n    data = sm.datasets.longley.load()\r\n    df = pd.DataFrame(data.exog, columns=data.exog_name)\r\n    y = data.endog\r\n    df['intercept'] = 1.\r\n\r\n    #Generate the OLS output and store it in olsresult\r\n    olsresult = sm.OLS(y, df).fit()\r\n\r\n    #Add the results to a list. The functions require the results to be in a list.\r\n    models = [olsresult]\r\n\r\n    #Check the order of the variable names\r\n    print sorted(olsresult.params.iteritems())\r\n\r\n    #Define the names to replace the variables\r\n    replaceNames = ['Armed', 'Gross National Product', 'GNPDEFL', 'Population', 'Unemployment', 'Year', 'intercept']\r\n\r\n    #Assign the generateTable class with the initial values\r\n    a = py_apsrtable.generateTable('/path/to/file/table.tex', models, center = 'True', parens= 'se' , var_names = replaceNames)\r\n\r\n    #Create the model to be used\r\n    a.create_model()\r\n\r\n    #Generate the first portion of the table\r\n    a.start_table('OLS Results Table', 'tab:ols', model_name=None)\r\n\r\n    #Middle of the table\r\n    a.model_table(stars=True)\r\n\r\n    #Bottom of the table\r\n    a.end_table()\r\n\r\nUsage for multiple models:\r\n\r\n    #Imports\r\n    import py_apsrtable\r\n    import scikits.statsmodels.api as sm\r\n    import pandas as pd\r\n\r\n    #Generate some data to use\r\n    data = sm.datasets.longley.load()\r\n    df = pd.DataFrame(data.exog, columns=data.exog_name)\r\n    y = data.endog\r\n    df['intercept'] = 1.\r\n\r\n    #Generate three separate models, each with different numbers of variables. \r\n    olsresult = sm.OLS(y, df).fit()\r\n    olsresult2 = sm.OLS(y, df[['GNP', 'UNEMP', 'ARMED']]).fit()\r\n    olsresult3 = sm.OLS(y, df[['GNP', 'POP', 'ARMED', 'YEAR']]).fit()\r\n\r\n    #Put the models into a list\r\n    models = [olsresult, olsresult2, olsresult3]\r\n\r\n    #Check the order of the variable names\r\n    print sorted(olsresult.params.iteritems())\r\n\r\n    #Define the names to replace the variables\r\n    replaceNames = ['Armed', 'Gross National Product', 'GNPDEFL', 'Population', 'Unemployment', 'Year', 'intercept']\r\n\r\n    #Assign the generateTable class with the initial values\r\n    a = py_apsrtable.generateTable('/path/to/file/table.tex', models, center = 'True', parens= 'se' , var_names = replaceNames)\r\n\r\n    #Create the model to be used in py_apsrtable\r\n    a.create_model()\r\n\r\n    #Generate the first portion of the table\r\n    a.start_table('OLS Results Table', 'tab:ols', model_name=None)\r\n\r\n    #Middle of the table\r\n    a.model_table(stars=True)\r\n\r\n    #Bottom of the table\r\n    a.end_table()\r\n\r\n\r\n\r\n","name":"py_apsrtable","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}